{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohan\\\\Desktop\\\\GIT\\\\potato-disease\\\\frontend\\\\src\\\\home.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Container from \"@material-ui/core/Container\";\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Paper, CardActionArea, CardMedia, Grid, TableContainer, Table, TableBody, TableHead, TableRow, TableCell, Button, CircularProgress } from \"@material-ui/core\";\nimport cblogo from \"./cblogo.jpg\";\nimport image from \"./bg.png\";\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport { common } from '@material-ui/core/colors';\nimport Clear from '@material-ui/icons/Clear';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(common.white),\n    backgroundColor: common.white,\n    '&:hover': {\n      backgroundColor: '#ffffff7a'\n    }\n  }\n}))(Button);\n_c = ColorButton;\n\nconst axios = require(\"axios\").default;\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1\n  },\n  clearButton: {\n    width: \"-webkit-fill-available\",\n    borderRadius: \"15px\",\n    padding: \"15px 22px\",\n    color: \"#000000a6\",\n    fontSize: \"20px\",\n    fontWeight: 900\n  },\n  root: {\n    maxWidth: 345,\n    flexGrow: 1\n  },\n  media: {\n    height: 400\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 500\n  },\n  gridContainer: {\n    justifyContent: \"center\",\n    padding: \"4em 1em 0 1em\"\n  },\n  mainContainer: {\n    backgroundImage: `url(${image})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    height: \"93vh\",\n    marginTop: \"8px\"\n  },\n  imageCard: {\n    margin: \"auto\",\n    maxWidth: 400,\n    height: 500,\n    backgroundColor: 'transparent',\n    boxShadow: '0px 9px 70px 0px rgb(0 0 0 / 30%) !important',\n    borderRadius: '15px'\n  },\n  imageCardEmpty: {\n    height: 'auto'\n  },\n  noImage: {\n    margin: \"auto\",\n    width: 400,\n    height: \"400 !important\"\n  },\n  input: {\n    display: 'none'\n  },\n  uploadIcon: {\n    background: 'white'\n  },\n  tableContainer: {\n    backgroundColor: 'transparent !important',\n    boxShadow: 'none !important'\n  },\n  table: {\n    backgroundColor: 'transparent !important'\n  },\n  tableHead: {\n    backgroundColor: 'transparent !important'\n  },\n  tableRow: {\n    backgroundColor: 'transparent !important'\n  },\n  tableCell: {\n    fontSize: '22px',\n    backgroundColor: 'transparent !important',\n    borderColor: 'transparent !important',\n    color: '#000000a6 !important',\n    fontWeight: 'bolder',\n    padding: '1px 24px 1px 16px'\n  },\n  tableCell1: {\n    fontSize: '14px',\n    backgroundColor: 'transparent !important',\n    borderColor: 'transparent !important',\n    color: '#000000a6 !important',\n    fontWeight: 'bolder',\n    padding: '1px 24px 1px 16px'\n  },\n  tableBody: {\n    backgroundColor: 'transparent !important'\n  },\n  text: {\n    color: 'white !important',\n    textAlign: 'center'\n  },\n  buttonGrid: {\n    maxWidth: \"416px\",\n    width: \"100%\"\n  },\n  detail: {\n    backgroundColor: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  appbar: {\n    background: '#be6a77',\n    boxShadow: 'none',\n    color: 'white'\n  },\n  loader: {\n    color: '#be6a77 !important'\n  }\n}));\nexport const ImageUpload = () => {\n  _s();\n\n  const classes = useStyles();\n  const [selectedFile, setSelectedFile] = useState();\n  const [preview, setPreview] = useState();\n  const [data, setData] = useState();\n  const [image, setImage] = useState(false);\n  const [isLoading, setIsloading] = useState(false);\n  let confidence = 0;\n\n  const sendFile = async () => {\n    if (image) {\n      let formData = new FormData();\n      formData.append(\"file\", selectedFile);\n      let res = await axios({\n        method: \"post\",\n        url: process.env.REACT_APP_API_URL,\n        data: formData\n      });\n\n      if (res.status === 200) {\n        setData(res.data);\n      }\n\n      setIsloading(false);\n    }\n  };\n\n  const clearData = () => {\n    setData(null);\n    setImage(false);\n    setSelectedFile(null);\n    setPreview(null);\n  };\n\n  useEffect(() => {\n    if (!selectedFile) {\n      setPreview(undefined);\n      return;\n    }\n\n    const objectUrl = URL.createObjectURL(selectedFile);\n    setPreview(objectUrl);\n  }, [selectedFile]);\n  useEffect(() => {\n    if (!preview) {\n      return;\n    }\n\n    setIsloading(true);\n    sendFile();\n  }, [preview]);\n\n  const onSelectFile = files => {\n    if (!files || files.length === 0) {\n      setSelectedFile(undefined);\n      setImage(false);\n      setData(undefined);\n      return;\n    }\n\n    setSelectedFile(files[0]);\n    setData(undefined);\n    setImage(true);\n  };\n\n  if (data) {\n    confidence = (parseFloat(data.confidence) * 100).toFixed(2);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      className: classes.appbar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title,\n          variant: \"h6\",\n          noWrap: true,\n          children: \"CodeBasics: Potato Disease Classification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.grow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n          src: cblogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: false,\n      className: classes.mainContainer,\n      disableGutters: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.gridContainer,\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: `${classes.imageCard} ${!image ? classes.imageCardEmpty : ''}`,\n            children: [image && /*#__PURE__*/_jsxDEV(CardActionArea, {\n              children: /*#__PURE__*/_jsxDEV(CardMedia, {\n                className: classes.media,\n                image: preview,\n                component: \"image\",\n                title: \"Contemplative Reptile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 25\n            }, this), !image && /*#__PURE__*/_jsxDEV(CardContent, {\n              className: classes.content,\n              children: /*#__PURE__*/_jsxDEV(DropzoneArea, {\n                acceptedFiles: ['image/*'],\n                dropzoneText: \"Drag and drop an image of a potato plant leaf to process\",\n                onChange: onSelectFile\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 26\n            }, this), data && /*#__PURE__*/_jsxDEV(CardContent, {\n              className: classes.detail,\n              children: /*#__PURE__*/_jsxDEV(TableContainer, {\n                component: Paper,\n                className: classes.tableContainer,\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  className: classes.table,\n                  size: \"small\",\n                  \"aria-label\": \"simple table\",\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    className: classes.tableHead,\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      className: classes.tableRow,\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        className: classes.tableCell1,\n                        children: \"Label:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        className: classes.tableCell1,\n                        children: \"Confidence:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    className: classes.tableBody,\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      className: classes.tableRow,\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        component: \"th\",\n                        scope: \"row\",\n                        className: classes.tableCell,\n                        children: data.class\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 260,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        className: classes.tableCell,\n                        children: [confidence, \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 263,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 24\n            }, this), isLoading && /*#__PURE__*/_jsxDEV(CardContent, {\n              className: classes.detail,\n              children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                color: \"secondary\",\n                className: classes.loader\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.title,\n                variant: \"h6\",\n                noWrap: true,\n                children: \"Processing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), data && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.buttonGrid,\n          children: /*#__PURE__*/_jsxDEV(ColorButton, {\n            variant: \"contained\",\n            className: classes.clearButton,\n            color: \"primary\",\n            component: \"span\",\n            size: \"large\",\n            onClick: clearData,\n            startIcon: /*#__PURE__*/_jsxDEV(Clear, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 157\n            }, this),\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImageUpload, \"guIzMe8rp5zsZeFqkBj9yEl/DjQ=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = ImageUpload;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ColorButton\");\n$RefreshReg$(_c2, \"ImageUpload\");","map":{"version":3,"sources":["C:/Users/rohan/Desktop/GIT/potato-disease/frontend/src/home.js"],"names":["useState","useEffect","makeStyles","withStyles","AppBar","Toolbar","Typography","Avatar","Container","React","Card","CardContent","Paper","CardActionArea","CardMedia","Grid","TableContainer","Table","TableBody","TableHead","TableRow","TableCell","Button","CircularProgress","cblogo","image","DropzoneArea","common","Clear","ColorButton","theme","root","color","palette","getContrastText","white","backgroundColor","axios","require","default","useStyles","grow","flexGrow","clearButton","width","borderRadius","padding","fontSize","fontWeight","maxWidth","media","height","paper","spacing","margin","gridContainer","justifyContent","mainContainer","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","marginTop","imageCard","boxShadow","imageCardEmpty","noImage","input","display","uploadIcon","background","tableContainer","table","tableHead","tableRow","tableCell","borderColor","tableCell1","tableBody","text","textAlign","buttonGrid","detail","flexDirection","alignItems","appbar","loader","ImageUpload","classes","selectedFile","setSelectedFile","preview","setPreview","data","setData","setImage","isLoading","setIsloading","confidence","sendFile","formData","FormData","append","res","method","url","process","env","REACT_APP_API_URL","status","clearData","undefined","objectUrl","URL","createObjectURL","onSelectFile","files","length","parseFloat","toFixed","title","content","class"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Paper, CardActionArea, CardMedia, Grid, TableContainer, Table, TableBody, TableHead, TableRow, TableCell, Button, CircularProgress } from \"@material-ui/core\";\r\nimport cblogo from \"./cblogo.jpg\";\r\nimport image from \"./bg.png\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport { common } from '@material-ui/core/colors';\r\nimport Clear from '@material-ui/icons/Clear';\r\n\r\n\r\n\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(common.white),\r\n    backgroundColor: common.white,\r\n    '&:hover': {\r\n      backgroundColor: '#ffffff7a',\r\n    },\r\n  },\r\n}))(Button);\r\nconst axios = require(\"axios\").default;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  clearButton: {\r\n    width: \"-webkit-fill-available\",\r\n    borderRadius: \"15px\",\r\n    padding: \"15px 22px\",\r\n    color: \"#000000a6\",\r\n    fontSize: \"20px\",\r\n    fontWeight: 900,\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n  },\r\n  media: {\r\n    height: 400,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n  },\r\n  gridContainer: {\r\n    justifyContent: \"center\",\r\n    padding: \"4em 1em 0 1em\",\r\n  },\r\n  mainContainer: {\r\n    backgroundImage: `url(${image})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover',\r\n    height: \"93vh\",\r\n    marginTop: \"8px\",\r\n  },\r\n  imageCard: {\r\n    margin: \"auto\",\r\n    maxWidth: 400,\r\n    height: 500,\r\n    backgroundColor: 'transparent',\r\n    boxShadow: '0px 9px 70px 0px rgb(0 0 0 / 30%) !important',\r\n    borderRadius: '15px',\r\n  },\r\n  imageCardEmpty: {\r\n    height: 'auto',\r\n  },\r\n  noImage: {\r\n    margin: \"auto\",\r\n    width: 400,\r\n    height: \"400 !important\",\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  uploadIcon: {\r\n    background: 'white',\r\n  },\r\n  tableContainer: {\r\n    backgroundColor: 'transparent !important',\r\n    boxShadow: 'none !important',\r\n  },\r\n  table: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableHead: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableRow: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableCell: {\r\n    fontSize: '22px',\r\n    backgroundColor: 'transparent !important',\r\n    borderColor: 'transparent !important',\r\n    color: '#000000a6 !important',\r\n    fontWeight: 'bolder',\r\n    padding: '1px 24px 1px 16px',\r\n  },\r\n  tableCell1: {\r\n    fontSize: '14px',\r\n    backgroundColor: 'transparent !important',\r\n    borderColor: 'transparent !important',\r\n    color: '#000000a6 !important',\r\n    fontWeight: 'bolder',\r\n    padding: '1px 24px 1px 16px',\r\n  },\r\n  tableBody: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  text: {\r\n    color: 'white !important',\r\n    textAlign: 'center',\r\n  },\r\n  buttonGrid: {\r\n    maxWidth: \"416px\",\r\n    width: \"100%\",\r\n  },\r\n  detail: {\r\n    backgroundColor: 'white',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  appbar: {\r\n    background: '#be6a77',\r\n    boxShadow: 'none',\r\n    color: 'white'\r\n  },\r\n  loader: {\r\n    color: '#be6a77 !important',\r\n  }\r\n}));\r\nexport const ImageUpload = () => {\r\n  const classes = useStyles();\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [preview, setPreview] = useState();\r\n  const [data, setData] = useState();\r\n  const [image, setImage] = useState(false);\r\n  const [isLoading, setIsloading] = useState(false);\r\n  let confidence = 0;\r\n\r\n  const sendFile = async () => {\r\n    if (image) {\r\n      let formData = new FormData();\r\n      formData.append(\"file\", selectedFile);\r\n      let res = await axios({\r\n        method: \"post\",\r\n        url: process.env.REACT_APP_API_URL,\r\n        data: formData,\r\n      });\r\n      if (res.status === 200) {\r\n        setData(res.data);\r\n      }\r\n      setIsloading(false);\r\n    }\r\n  }\r\n\r\n  const clearData = () => {\r\n    setData(null);\r\n    setImage(false);\r\n    setSelectedFile(null);\r\n    setPreview(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!selectedFile) {\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n    const objectUrl = URL.createObjectURL(selectedFile);\r\n    setPreview(objectUrl);\r\n  }, [selectedFile]);\r\n\r\n  useEffect(() => {\r\n    if (!preview) {\r\n      return;\r\n    }\r\n    setIsloading(true);\r\n    sendFile();\r\n  }, [preview]);\r\n\r\n  const onSelectFile = (files) => {\r\n    if (!files || files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      setImage(false);\r\n      setData(undefined);\r\n      return;\r\n    }\r\n    setSelectedFile(files[0]);\r\n    setData(undefined);\r\n    setImage(true);\r\n  };\r\n\r\n  if (data) {\r\n    confidence = (parseFloat(data.confidence) * 100).toFixed(2);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\" className={classes.appbar}>\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            CodeBasics: Potato Disease Classification\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <Avatar src={cblogo}></Avatar>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container maxWidth={false} className={classes.mainContainer} disableGutters={true}>\r\n        <Grid\r\n          className={classes.gridContainer}\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Card className={`${classes.imageCard} ${!image ? classes.imageCardEmpty : ''}`}>\r\n              {image && <CardActionArea>\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={preview}\r\n                  component=\"image\"\r\n                  title=\"Contemplative Reptile\"\r\n                />\r\n              </CardActionArea>\r\n              }\r\n              {!image && <CardContent className={classes.content}>\r\n                <DropzoneArea\r\n                  acceptedFiles={['image/*']}\r\n                  dropzoneText={\"Drag and drop an image of a potato plant leaf to process\"}\r\n                  onChange={onSelectFile}\r\n                />\r\n              </CardContent>}\r\n              {data && <CardContent className={classes.detail}>\r\n                <TableContainer component={Paper} className={classes.tableContainer}>\r\n                  <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\r\n                    <TableHead className={classes.tableHead}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell className={classes.tableCell1}>Label:</TableCell>\r\n                        <TableCell align=\"right\" className={classes.tableCell1}>Confidence:</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody className={classes.tableBody}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\r\n                          {data.class}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\" className={classes.tableCell}>{confidence}%</TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </CardContent>}\r\n              {isLoading && <CardContent className={classes.detail}>\r\n                <CircularProgress color=\"secondary\" className={classes.loader} />\r\n                <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                  Processing\r\n                </Typography>\r\n              </CardContent>}\r\n            </Card>\r\n          </Grid>\r\n          {data &&\r\n            <Grid item className={classes.buttonGrid} >\r\n\r\n              <ColorButton variant=\"contained\" className={classes.clearButton} color=\"primary\" component=\"span\" size=\"large\" onClick={clearData} startIcon={<Clear fontSize=\"large\" />}>\r\n                Clear\r\n              </ColorButton>\r\n            </Grid>}\r\n        </Grid >\r\n      </Container >\r\n    </React.Fragment >\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}